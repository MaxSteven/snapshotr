{"name":"Snapshotr","tagline":"Nuke snapshot manager","body":"## What is it?\r\nThis is a Nuke snapshot manager which is used to make script versioning more straightforward\r\n\r\n## What is snapshot?\r\nIt is a backup of script at the specific time with user comment and screenshot  \r\nAll snapshots are presented in user friendly web-interface\r\n\r\n## Installation\r\n1. `cd ~/.nuke && git clone https://github.com/artaman/snapshotr.git`\r\n2. Open `~/.nuke/init.py` with your favourite editor\r\n3. Add the following code:\r\n\r\n```python\r\n#\r\n# Snapshotr\r\n#\r\nimport os, nuke\r\nsnapr_path = os.getenv(\"HOME\") + \"/.nuke\"\r\nif os.path.exists(snapr_path + \"/snapshotr\"):\r\n    nuke.pluginAddPath(snapr_path)\r\n    print \"~ Loading Snapshotr into the Nuke...\"\r\n    import snapshotr\r\nelse:\r\n    print \"! Snapshotr path can't be found, going on...\"\r\n```\r\n\r\n## File versioning\r\nThis tool assumes that artist uses the following convention in naming scripts: *shot.user.task.v01.00.nk*  \r\nIn case file is saved with incorrect name, it will display a warning message and panel will not load  \r\nEach snapshot increases minor version by one (e.g v01.00 --> v01.01)\r\n\r\n## Nuke panel\r\nAfter following steps above you will have a new panel called \"Snapshotr\"  \r\nBy default it is dockable, but it can be dragged out and used as a modal window:\r\n\r\n![snapshotr_main](https://cloud.githubusercontent.com/assets/300146/5570169/83b73a34-8fb8-11e4-8f45-42d25097a31b.png)\r\n* __Comment field__ — Self-descriptive. Color can be specified as a hashtag (#green, #blue, etc)\r\n* __Instant__ — Makes snapshot using screenshot of current viewer, perceptually instant for a user\r\n* __Full__ — Makes full-res snapshot, image is rendered in background from the selected node. Custom LUT's are handled correctly. Whatever you have as input\\_process or/and viewer_process\r\nwill be converted to sRGB prior to render\r\n* __Open__ — Opens new browser tab with web-view\r\n* __Autosnap__ – Creates automatic instant snapshot every XX minutes\r\n* __Mark node__ — Marks selected node with color and current timestamp\r\n\r\n## Web view\r\nHere is an example of a web page generated each time user manually initiated snapshot creation:\r\n\r\n![v020_webview](https://cloud.githubusercontent.com/assets/300146/7670598/dbf51c0c-fcdc-11e4-9b2d-af5d08e9703c.png)\r\n\r\nBy default snapshots are sorted from new to old, this can be changed by clicking \"Time created\" column header. Clicking \"nk\" button user can see a box with path to the .nk script. Clicking the image thumbnail, full-res version will be opened (limited to the screen width).\r\n\r\n## File structure\r\n![v020_filelist](https://cloud.githubusercontent.com/assets/300146/7670600/30f23a6e-fcdd-11e4-870e-fcff797d8232.png)\r\n\r\nSnapshots created in \"snaps\" directory that is relative to the current script path. So, if script is /projects/xxx/abc001.john.comp.v01.00.nk, then snapshots will be stored in /projects/xxx/snaps/   \r\nAfter writing files to the filesystem they are chmod'ed to 0444  \r\n\r\n## Debugging\r\n![v020_debug](https://cloud.githubusercontent.com/assets/300146/7670615/bd4a68e2-fcdd-11e4-940d-21498f9686ab.png)\r\n\r\nSnapshotr outputs reasonable amount of information to the Nuke script editor  \r\nIf you want more, change ```DEV``` variable to 1 or 2 (last one will output a lot)\r\n\r\n## Performance\r\nOn typical workstation this tool parses ~200 snapshots to the web-view per second\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}